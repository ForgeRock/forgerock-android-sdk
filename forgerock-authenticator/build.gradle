/*
 * Copyright (c) 2020 - 2021 ForgeRock. All rights reserved.
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */

apply plugin: 'com.android.library'
apply plugin: "com.adarshr.test-logger"
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    compileSdkVersion 31

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        unitTests.all {
            exclude '**/*TestSuite*'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        jniLibs {
            pickFirsts += ['**/*.so']
        }
    }

}

/**
 * Generate Javadoc
 */
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    destinationDir = new File("$buildDir/generated-javadoc")
    failOnError = false
    ext.androidDoc = "${android.sdkDirectory}/docs/reference"
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.linksOffline("http://d.android.com/reference", ext.androidDoc)
    options.links("http://docs.oracle.com/javase/7/docs/api/")
    options.links("http://d.android.com/reference/")
}

/**
 * JCenter Dependency Manager
 */
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply from: '../config/logger.gradle'
apply from: '../config/publish.gradle'

/**
 * Dependencies
 */
dependencies {
    api project(':forgerock-core')
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // JWT
    implementation 'com.nimbusds:nimbus-jose-jwt:9.0.1'

    // Common
    implementation 'androidx.annotation:annotation:1.1.0'

    // FCM Notifications, make it optional for developer
    compileOnly "com.google.firebase:firebase-messaging:20.2.0"

    // Networking
    implementation 'com.squareup.okhttp3:okhttp:4.3.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    // Testing
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.7.3'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.8.0'
    testImplementation "com.google.firebase:firebase-messaging:20.2.0"
    testImplementation 'org.mockito:mockito-core:3.4.6'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

}

