name: Run Tests in BitBar
on:
  workflow_call:
    inputs:
      bitbar-project-id:
        description: BitBar project id
        type: string

      bitbar-device-group-id:
        description: The device group id to run tests against
        type: string

      bitbar-os-type: 
        description: OS Type
        type: string
        default: ANDROID

      bitbar-framework-id:
        description: The framework id
        type: string
        default: 252

    outputs:
      bitbar-run-id:
        description: The newly created run id in BitBar
        value: ${{ jobs.bitbar-run.outputs.bitbar_run_id }}
        
    secrets:
      BITBAR_API_KEY:
        description: BitBar API Key
        required: true
      SLACK_WEBHOOK:
        description: Slack Notifier Incoming Webhook
        required: true
jobs:
  bitbar-run:
    runs-on: ubuntu-latest
    outputs:
      bitbar_run_id: ${{ steps.bitbar_run_id.outputs.bitbar_run_id }}

    steps:
      # Get the test artifacts prepared in previous step
      - name: Get the app-debug-androidTest.apk BitBar artifact
        uses: actions/download-artifact@v3
        with:
          name: app-debug-androidTest-signed.apk

      - name: Get the forgerock-integration-tests-debug-androidTest.apk BitBar artifact
        uses: actions/download-artifact@v3
        with:
          name: forgerock-integration-tests-debug-androidTest-signed.apk

      - name: Unzip app-debug-androidTest-signed.apk and forgerock-integration-tests-debug-androidTest-signed.apk
        run: |
          unzip -o app-debug-androidTest-signed.apk
          unzip -o forgerock-integration-tests-debug-androidTest-signed.apk

      - name: Upload app-debug-androidTest-signed.apk to BitBar
        run: |
          echo "BITBAR_APP_FILE_ID=$(curl -X POST -u ${{ secrets.BITBAR_API_KEY }}: https://cloud.bitbar.com/api/me/files -F "file=@app-debug-androidTest-signed.apk" | jq '.id')" >> $GITHUB_ENV

      - name: Upload forgerock-integration-tests-debug-androidTest-signed.apk to BitBar
        run: |
          echo "BITBAR_TEST_FILE_ID=$(curl -X POST -u ${{ secrets.BITBAR_API_KEY }}: https://cloud.bitbar.com/api/me/files -F "file=@forgerock-integration-tests-debug-androidTest-signed.apk" | jq '.id')"  >> $GITHUB_ENV

      - name: Prepare BitBar run configuration file
        run: |
          (
            echo "{"
            echo "\"osType\":\"${{ inputs.bitbar-os-type }}\","
            echo "\"projectId\":${{ inputs.bitbar-project-id }},"
            echo "\"frameworkId\":${{ inputs.bitbar-framework-id }},"
            echo "\"deviceGroupId\":${{ inputs.bitbar-device-group-id }},"
            echo "\"files\":["
            echo "    {\"id\":${{ env.BITBAR_APP_FILE_ID }}, \"action\": \"INSTALL\"},"
            echo "    {\"id\":${{ env.BITBAR_TEST_FILE_ID }}, \"action\": \"RUN_TEST\"}"
            echo "]"
            echo "}"
          ) > bitbar-run-configuration.txt

      - name: Display bitbar-run-configuration.txt
        run: |
          cat bitbar-run-configuration.txt

      # Start the test run
      - name: Start a test run
        run: |
          echo "BITBAR_TEST_RUN_ID=$(curl -H 'Content-Type: application/json' -u ${{ secrets.BITBAR_API_KEY }}: https://cloud.bitbar.com/api/me/runs --data-binary @bitbar-run-configuration.txt | jq '.id')"  >> $GITHUB_ENV

      # Set bitbar_run_id as output of the workflow. This is needed for the next workflow to continue
      - name: Set the bitbar_run_id output
        id: bitbar_run_id
        run: echo "::set-output name=bitbar_run_id::${{ env.BITBAR_TEST_RUN_ID }}"

      # Send slack notification ONLY if any of the steps above fail
      - name: Send slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: all
          custom_payload: |
            {
              attachments: [{
                title: ':no_entry: Failed to start BitBar test run!',
                color: 'danger',
                text: `\nWorkflow: ${process.env.AS_WORKFLOW} -> ${process.env.AS_JOB}\nPull request: ${process.env.AS_PULL_REQUEST}\nCommit: ${process.env.AS_COMMIT} by ${process.env.AS_AUTHOR}`, 
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure()