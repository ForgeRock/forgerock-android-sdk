[versions]
agp = "8.2.2"
annotation = "1.6.0"
appauth = "0.11.1"
appcompat = "1.6.1"
assertj-core = "2.9.1"
bcpkix-jdk15on = "1.58.0.0"
biometric-ktx = "1.2.0-alpha05"
commons-io = "2.6"
constraintlayout = "2.1.4"
easy-random-core = "4.0.0"
facebook-login = "16.0.0"
firebase-messaging = "23.1.2"
fragment-ktx = "1.6.1"
integrity = "1.3.0"
kotlin = "1.9.22"
junit = "4.13.2"
androidx-test-core = "1.5.0"
androidx-test-ext-junit = "1.1.5"
androidx-test-runner = "1.5.2"
kotlinx-coroutines-play-services = "1.7.2"
lombok-version = "1.18.28"
mockito-core = "4.8.1"
mockito-kotlin = "4.0.0"
mockwebserver = "2.7.5"
mockwebserver-version = "4.8.0"
nimbus-jose-jwt = "9.37.3"
okhttp = "4.11.0"
org-robolectric-robolectric = "4.9.2"
espresso-core = "3.5.1"
io-mockk = "1.13.9"
org-jetbrains-kotlinx = "1.7.2"
com-pingidentity-signals = "5.1.2"
core-ktx = "1.12.0"
material = "1.11.0"
play-services-auth = "20.6.0"
play-services-fido = "20.0.1"
play-services-location = "21.0.1"
play-services-safetynet = "18.0.1"
powermock-module-junit4 = "2.0.9"
powermock-api-mockito2 = "2.0.9"
rules = "1.5.0"
security-crypto = "1.1.0-alpha06"
firebase-crashlytics-buildtools = "2.9.9"

[libraries]
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-biometric-ktx = { module = "androidx.biometric:biometric-ktx", version.ref = "biometric-ktx" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso-core" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment-ktx" }
androidx-fragment-testing = { module = "androidx.fragment:fragment-testing", version.ref = "fragment-ktx" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "security-crypto" }
appauth = { module = "net.openid:appauth", version.ref = "appauth" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj-core" }
bcpkix-jdk15on = { module = "com.madgag.spongycastle:bcpkix-jdk15on", version.ref = "bcpkix-jdk15on" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
easy-random-core = { module = "org.jeasy:easy-random-core", version.ref = "easy-random-core" }
facebook-login = { module = "com.facebook.android:facebook-login", version.ref = "facebook-login" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging", version.ref = "firebase-messaging" }
integrity = { module = "com.google.android.play:integrity", version.ref = "integrity" }
jetbrains-kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx-coroutines-play-services" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "androidx-test-core" }
androidx-test-runner = { group = "androidx.test", name = "runner", version.ref = "androidx-test-runner" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "org-jetbrains-kotlinx" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito-core" }
mockwebserver = { module = "com.squareup.okhttp:mockwebserver", version.ref = "mockwebserver" }
nimbus-jose-jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus-jose-jwt" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp3-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver-version" }
org-robolectric-robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "org-robolectric-robolectric" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
io-mockk = { group = "io.mockk", name = "mockk", version.ref = "io-mockk" }
org-jetbrains-kotlinx = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "org-jetbrains-kotlinx" }
com-pingidentity-signals  = { group = "com.pingidentity.signals", name = "android-sdk", version.ref = "com-pingidentity-signals" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "play-services-auth" }
play-services-fido = { module = "com.google.android.gms:play-services-fido", version.ref = "play-services-fido" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "play-services-location" }
play-services-safetynet = { module = "com.google.android.gms:play-services-safetynet", version.ref = "play-services-safetynet" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermock-api-mockito2" }
powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermock-module-junit4" }
projectlombok-lombok = { module = "org.projectlombok:lombok", version.ref = "lombok-version" }
rules = { module = "androidx.test:rules", version.ref = "rules" }
firebase-crashlytics-buildtools = { group = "com.google.firebase", name = "firebase-crashlytics-buildtools", version.ref = "firebase-crashlytics-buildtools" }

[plugins]
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

